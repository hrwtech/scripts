# Doctest

You can use a doctest file to run automated tests that are embedded in documentation or other comments. When you run this file (by tapping the â–· button in Pythonista beta), the `doctest` module searches for pieces of text that look like interactive Python sessions, and executes those sessions to verify that they work exactly as shown.


    >>> from BibleParseRefs import parse_ref, parse_refs
    
    >>> parse_ref(' John ') == {'book': 'John'}
    True
    >>> parse_ref(' 1  John ') == {'book': '1 John'}
    True
    >>> parse_ref(' 1  John  3  ') == {'book': '1 John', 'chapter': 3}
    True
    >>> parse_ref(' 1  John  3  :  1 - 3 , 5, 7 - 9  ') == {
    ...     'book': '1 John', 'chapter': 3, 'verses': '1-3,5,7-9'}
    True

    Possible formats for the references include:
      Book or multiple books:
    >>> parse_refs('Matthew') == [{'book': 'Matthew'}]
    True
    >>> parse_refs('Luke;Mark') == [{'book': 'Luke'}, {'book': 'Mark'}]
    True

      Chapters or multiple chapters:
    >>> parse_refs('Luke 3;Mark 4') == [
    ...     {'book': 'Luke', 'chapter': 3}, {'book': 'Mark', 'chapter': 4}]
    True
    >>> parse_refs('Luke 3;4') == [
    ...     {'book': 'Luke', 'chapter': 3}, {'book': 'Luke', 'chapter': 4}]
    True

      Multiple books with consecutive or single verses:
    >>> (parse_refs('1 John 5:3-5,7-10,14;Mark 7:4-6;8:3-6,10') ==
    ...  parse_refs('1 John 5:3-5,7-10,14;Mark 7:4-6;Mark 8:3-6,10'))
    True
    
      Consecutive verses:
    >>> parse_refs('Mark 7:4-6') == [
    ...     {'book': 'Mark', 'chapter': 7, 'verses': '4-6'}]
    True

      Single verse:
    >>> parse_refs('Mark 7:4') == [
    ...     {'book': 'Mark', 'chapter': 7, 'verses': '4'}]
    True
    
    Gracefully deal with extra whitespace...
    >>> refs = '1   John   5 : 3 - 5 , 7-10 , 14;Mark   7 : 4-6 ; 8 : 3 - 6,10'
    >>> parse_refs(refs) == [
    ...     {'book': '1 John', 'chapter': 5, 'verses': '3-5,7-10,14'},
    ...     {'book': 'Mark', 'chapter': 7, 'verses': '4-6'},
    ...     {'book': 'Mark', 'chapter': 8, 'verses': '3-6,10'}]
    True

    >>> parse_refs('Mark 1:1-4;5;8') == [
    ...     {'book': 'Mark', 'chapter': 1, 'verses': '1-4', },
    ...     {'book': 'Mark', 'chapter': 5},
    ...     {'book': 'Mark', 'chapter': 8}]
    True
